jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build
  #----------------TEST-------------------------
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test -p:CollectCoverage=true -p:CoerletOutputFormat=opencover --logger=trx
  #-----------------ANALYZE------------------------
  #analyze:
  #needs:
  #- build
  #- test
  #runs-on: ubuntu-20.04
  #steps:
  #- uses: actions/checkout@v2
  #with:
  # Disabling shallow clone is recommended for improving relevancy of reporting
  #fetch-depth: 0
  #- name: SonarCloud Scan
  #uses: sonarsource/sonarcloud-github-action@master
  #env:
  #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  analyze:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Funtasm_PizzaBoxWeb" /o:"funtasm" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  #-------------------PACKAGE-----------------------------
  package:
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
    needs:
      - build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker image build -f Dockerfile -t pizzabox .
      - run: docker image tag pizzabox funtasm/pizzabox
      - run: docker push funtasm/pizzabox
      - run: docker logout

  #----------------------DEPLOY------------------------------
  deploy:
    needs:
      - package
    runs-on: ubuntu-20.04
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: funtasm-pizzaboxweb
          images: funtasm/pizzabox

name: ci-pipeline
on:
  push:
    branches:
      - client-branch
  pull_request:
    types: [opened, synchronize, reopened]
